apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: cloudflared
  name: cloudflared-deployment
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      pod: cloudflared
  template:
    metadata:
      creationTimestamp: null
      annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-inject-status: 'update'
        vault.hashicorp.com/role: app-vault-reader
        vault.hashicorp.com/agent-inject-secret-config: secrets/desci-server/dev/db
        vault.hashicorp.com/agent-inject-template-config: |
          {{- with secret "secrets/desci-server/dev/repo" -}}
          echo "sourcing";
          export CLOUDFLARE_API_TOKEN={{ .Data.CLOUDFLARE_API_TOKEN }}
          {{- end -}}
      labels:
        pod: cloudflared
    spec:
      containers:
        - command:
            - cloudflared
            - tunnel
            - --no-autoupdate
            # In a k8s environment, the metrics server needs to listen outside the pod it runs on.
            # The address 0.0.0.0:2000 allows any pod in the namespace.
            - --metrics
            - 0.0.0.0:2000
            - run
          args:
            - --token
            # Cloudflare API token created at https://dash.cloudflare.com/profile/api-tokens
            - ${CLOUDFLARE_API_TOKEN}
          image: cloudflare/cloudflared:latest
          name: cloudflared
          livenessProbe:
            httpGet:
              # Cloudflared has a /ready endpoint which returns 200 if and only if
              # it has an active connection to the edge.
              path: /ready
              port: 2000
            failureThreshold: 1
            initialDelaySeconds: 10
            periodSeconds: 10
