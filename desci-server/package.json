{
  "name": "@desci-labs/desci-server",
  "version": "0.3.4",
  "description": "Manage DeSci Nodes state: users, nodes orchestration, decentralized storage, blockchain resolvers",
  "engines": {
    "node": ">=16.14"
  },
  "type": "module",
  "scripts": {
    "dev": "concurrently \"npm run watch-compile\" \"npm run watch-dev\"",
    "watch-compile": "debug=* tsc -w --preserveWatchOutput",
    "watch-dev": "debug=* nodemon --watch \"dist/**/*\" -e js ./dist/index.js",
    "script:fix-mirrors": "debug=* node --no-warnings --enable-source-maps --loader ts-node/esm ./src/scripts/retry-mirrors.ts",
    "script:upgrade-manifests": "debug=* node --no-warnings --enable-source-maps --loader ts-node/esm ./src/scripts/upgradeManifests.ts",
    "script:test-upgrade-manifests": "debug=* node --no-warnings --enable-source-maps --loader ts-node/esm ./src/scripts/testUpgradeManifests.ts",
    "script:fill-research-fields": "debug=* node --no-warnings --enable-source-maps --loader ts-node/esm ./src/scripts/fill-research-fields.ts",
    "script:fix-data-refs": "debug=* node --no-warnings --enable-source-maps --loader ts-node/esm ./src/scripts/dataRefDoctor.ts",
    "script:active-users": "debug=* node --no-warnings --enable-source-maps --loader ts-node/esm ./src/scripts/activeUsers.ts",
    "script:invalidate-redis-cache": "debug=* node --no-warnings --enable-source-maps --loader ts-node/esm ./src/scripts/invalidate-redis-cache.ts",
    "script:increase-base-drive-storage": "debug=* node --no-warnings --enable-source-maps --loader ts-node/esm ./src/scripts/increase-base-drive-storage.ts",
    "script:testing": "debug=* node --no-warnings --enable-source-maps --loader ts-node/esm ./src/scripts/testing.ts",
    "script:migrate-draft-trees": "debug=* node --no-warnings --enable-source-maps --loader ts-node/esm ./src/scripts/migrate-draft-trees.ts",
    "script:endorse-dpid": "debug=* node --no-warnings --enable-source-maps --loader ts-node/esm ./src/scripts/endorse-dpid.ts",
    "script:fix-dpid": "debug=* node --no-warnings --enable-source-maps --loader ts-node/esm ./src/scripts/fix-dpid.ts",
    "script:seed-social-data": "debug=* node --no-warnings --enable-source-maps --loader ts-node/esm ./src/scripts/seed-social-data.ts",
    "script:DESTRUCTIVE-clear-social-data": "debug=* node --no-warnings --enable-source-maps --loader ts-node/esm ./src/scripts/DESTRUCTIVE-clear-social-data.ts",
    "script:seed-community-member": "debug=* node --no-warnings --enable-source-maps --loader ts-node/esm ./src/scripts/seed-community-members.ts",
    "build": "rimraf dist && tsc && yarn copy-files",
    "copy-files": "copyfiles -u 1 src/**/*.cjs dist/",
    "generate": "npx prisma generate",
    "migrate:local": "DATABASE_URL=postgresql://walter:white@localhost:5433/boilerplate npx prisma migrate dev",
    "migrate": "yarn generate && npx prisma migrate deploy --preview-feature",
    "start": "NODE_PATH=./dist node ./dist/index.js",
    "prepare": "",
    "lint": "eslint --max-warnings 0 --ext .js,ts src",
    "lint-staged-husky": "lint-staged",
    "lint-prettier": "prettier --config .prettierrc --list-different '{src,test}/**/*.{ts,js,css,scss}'",
    "prettier": "prettier --config .prettierrc --write './**/*.{ts,js,css,scss,json,md}'",
    "test:destructive": "NODE_OPTIONS=\"--experimental-specifier-resolution=node --loader=ts-node/esm\" mocha --colors --require ts-node/register 'test/integration/**/*.test.ts' --timeout 20000 --exit",
    "test:destructive:debug": "yarn test:destructive --inspect=0.0.0.0:9227",
    "test:check": "npx tsc --project ./tsconfig-test.json",
    "test": "yarn test:check && yarn docker:test; export EXIT=$(echo $?); docker-compose  --file ../docker-compose.test.yml --compatibility down; exit $EXIT",
    "coverage:destructive": "nyc --all --parser-plugins='[\"importAssertions\"]' -r lcov -e .ts -x \"*.test.ts\" npm run test:destructive",
    "coverage:destructive:debug": "nyc --all --parser-plugins='[\"importAssertions\"]' -r lcov -e .ts -x \"*.test.ts\" npm run test:destructive:debug",
    "commit": "git-cz",
    "db:forward": "kubectl run --env REMOTE_HOST=$REMOTE_HOST --env REMOTE_PORT=5432 --env LOCAL_PORT=8080 --port 8080 --image marcnuri/port-forward test-port-forward ;  kubectl port-forward test-port-forward 8080:8080",
    "docker:dev": "../dockerDev.sh",
    "docker:test": "CI=true docker-compose --file ../docker-compose.test.yml --compatibility up --exit-code-from nodes_backend_test",
    "docker:stage": "docker-compose --file docker-compose.yml --file docker-compose.stage.yml --compatibility up --build",
    "docker:prod": "../dockerProd.sh",
    "podman:dev": "podman-compose --file docker-compose.yml --file docker-compose.dev.yml up --build",
    "email-dev": "email dev --dir ./src/templates/emails --port 3777",
    "check-deps": "npx npm-check"
  },
  "dependencies": {
    "@automerge/automerge-repo": "^1.0.19",
    "@automerge/automerge-repo-network-websocket": "^1.0.19",
    "@aws-sdk/client-s3": "^3.537.0",
    "@desci-labs/desci-codex-lib": "^1.1.7",
    "@desci-labs/desci-contracts": "0.2.5-rc7",
    "@desci-labs/desci-models": "0.2.9",
    "@honeycombio/opentelemetry-node": "^0.3.2",
    "@ipld/dag-pb": "^4.0.0",
    "@opentelemetry/api": "^1.8.0",
    "@opentelemetry/auto-instrumentations-node": "^0.37",
    "@penseapp/discord-notification": "^2.0.9",
    "@prisma/client": "4.10.1",
    "@react-email/components": "0.0.15",
    "@sendgrid/mail": "^7.7.0",
    "@sentry/node": "^7.12.0",
    "@sentry/tracing": "^7.12.0",
    "@types/lodash-es": "^4.17.12",
    "@types/mkdirp": "^1.0.2",
    "@types/multer": "^1.4.7",
    "@types/tar": "^6.1.3",
    "archiver": "^5.3.1",
    "arweave": "^1.10.18",
    "aws-sdk": "^2.1186.0",
    "axios": "^1.3.5",
    "body-parser": "^1.20.2",
    "concurrently": "^8.2.0",
    "cookie-parser": "^1.4.5",
    "crypto": "^1.0.1",
    "ethers": "^5.6.9",
    "express": "^4.17.1",
    "form-data": "^4.0.0",
    "gaxios": "^6.3.0",
    "googleapis": "^133.0.0",
    "helmet": "^4.6.0",
    "http-proxy-middleware": "3.0.0-beta.0",
    "ipfs-unixfs": "^11.1.3",
    "it-to-buffer": "^4.0.5",
    "jsonwebtoken": "^8.5.1",
    "kill-port": "^2.0.1",
    "kubo-rpc-client": "^3.0.4",
    "lodash": "^4.17.21",
    "lodash-es": "^4.17.21",
    "mkdirp": "^1.0.4",
    "multer": "^1.4.5-lts.1",
    "multer-s3": "^3.0.1",
    "multiformats": "^13.1.0",
    "node-fetch": "^3.3.2",
    "pino": "^8.14.1",
    "pino-http": "^8.3.3",
    "pino-pretty": "^10.0.0",
    "prisma": "4.10.1",
    "qs": "^6.12.0",
    "react-email": "2.1.0",
    "redis": "^4.6.7",
    "reflect-metadata": "^0.1.13",
    "request": "^2.88.2",
    "rimraf": "^5.0.1",
    "short-unique-id": "^4.4.4",
    "siwe": "^1.1.6",
    "tar": "^6.2.0",
    "url-safe-base64": "1.2.0",
    "uuid": "^8.3.2",
    "ws": "^8.15.0",
    "yauzl": "^2.10.0",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@commitlint/cli": "^13.1.0",
    "@commitlint/config-conventional": "^13.1.0",
    "@types/archiver": "^6.0.2",
    "@types/body-parser": "^1.19.1",
    "@types/chai": "^4.2.21",
    "@types/cookie-parser": "^1.4.2",
    "@types/express": "^4.17.13",
    "@types/helmet": "4.0.0",
    "@types/jsonwebtoken": "^8.5.4",
    "@types/mocha": "^10.0.6",
    "@types/multer-s3": "^3.0.1",
    "@types/node": "^20.10.4",
    "@types/supertest": "^2.0.12",
    "@types/ws": "^8.5.10",
    "@types/xmldom": "^0.1.34",
    "@typescript-eslint/eslint-plugin": "^6.14.0",
    "@typescript-eslint/parser": "^6.14.0",
    "chai": "^4.3.4",
    "commitizen": "^4.2.4",
    "copyfiles": "^2.4.1",
    "dotenv": "^10.0.0",
    "eslint": "^7.32.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.0",
    "eslint-plugin-no-array-reduce": "^1.0.62",
    "eslint-plugin-prettier": "^5.0.1",
    "lint-staged": "^11.1.2",
    "mocha": "^10.2.0",
    "nodemon": "^2.0.22",
    "nyc": "^15.1.0",
    "prettier": "^3.1.1",
    "pretty-quick": "^3.1.1",
    "supertest": "^6.3.3",
    "ts-node": "^10.9.2",
    "typescript": "^5.0.0"
  },
  "lint-staged": {
    "*": [
      "pretty-quick --staged"
    ],
    "{src,test}/**/*.{js,ts}": [
      "eslint --max-warnings 0"
    ]
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "config": {
    "commitizen": {
      "path": "node_modules/cz-conventional-changelog"
    }
  },
  "prisma": {
    "seed": "node --no-warnings=ExperimentalWarning --loader ts-node/esm prisma/seed.ts"
  }
}
