apiVersion: v1
kind: Service
metadata:
  name: grobid-dev
spec:
  selector:
    App: GrobidDev
  ports:
    - port: 80
      targetPort: 8070
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grobid-dev
  labels:
    App: GrobidDev
spec:
  replicas: 2
  revisionHistoryLimit: 8
  selector:
    matchLabels:
      App: GrobidDev
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      # annotations:
      #   vault.hashicorp.com/agent-inject: 'true'
      #   vault.hashicorp.com/agent-inject-status: 'update'
      #   vault.hashicorp.com/role: app-vault-reader
      #   vault.hashicorp.com/agent-inject-secret-config: secrets/desci-server/staging/db
      #   vault.hashicorp.com/agent-inject-template-config: |
      #     {{- with secret "secrets/automating-metadata/dev" -}}
      #     export OPENAI_API_KEY={{ .Data.OPENAI_API_KEY }}
      #     export crmailto={{ .Data.crmailto }}
      #     export pyalexemail={{ .Data.pyalexemail }}
      #     export AM_API_KEY={{ .Data.AM_API_KEY }}
      #     export IPFS_GATEWAY_URL={{ .Data.IPFS_GATEWAY_URL }}

      #     echo "dbset"; 
      #     {{- end -}}
      labels:
        App: GrobidDev
    spec:
      containers:
        - image: lfoppiano/grobid:0.8.0
          name: grobid-dev
          ports:
            - containerPort: 8070
              name: server-api
          env:
            - name: JAVA_OPTS
              value: "-Xmx2G -Xms2G"
          resources:
            limits:
              cpu: '1.0'
              memory: 5Gi
            requests:
              cpu: '0.8'
              memory: 5Gi
          # restart pod after failureThreshold*periodSeconds total seconds
          livenessProbe:
            httpGet:
              path: /api/isalive
              port: server-api
            failureThreshold: 80
            periodSeconds: 3
          # temporarily stop sending traffic to pod after failureThreshold*periodSeconds total seconds
          readinessProbe:
            httpGet:
              path: /api/isalive
              port: server-api
            failureThreshold: 3
            periodSeconds: 1
          # wait for pod to start for failureThreshold*periodSeconds total seconds
          startupProbe:
            httpGet:
              path: /api/isalive
              port: server-api
            failureThreshold: 200
            periodSeconds: 1
      # serviceAccountName: 'vault-auth'
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grobid-dev-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"  # Allow file uploads up to 100MB
spec:
  rules:
  - host: grobid-dev.desci.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grobid-dev
            port:
              number: 80
