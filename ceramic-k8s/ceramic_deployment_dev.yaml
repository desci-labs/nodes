apiVersion: apps/v1
kind: Deployment
metadata:
  name: js-ceramic-dev
  labels:
    App: JsCeramicDev
spec:
  replicas: 1
  revisionHistoryLimit: 8
  selector:
    matchLabels:
      App: JsCeramicDev
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-status: "update"
        vault.hashicorp.com/role: app-vault-reader
        vault.hashicorp.com/agent-inject-secret-config: secrets/desci-server/dev/db
        vault.hashicorp.com/agent-inject-template-config: |
          {{- with secret "secrets/desci-server/ipfs-gateway-staging" -}}
          export AWS_REGION=us-east-2
          export AWS_ACCESS_KEY={{ .Data.AWS_ACCESS_KEY }}
          export AWS_SECRET_KEY={{ .Data.AWS_SECRET_KEY }}
          export AWS_DEFAULT_REGION=us-east-2
          echo "envset"; 

          {{- end -}}
          {{- with secret "secrets/desci-server/dev/db" -}}
          echo "{\"anchor\":{\"ethereum-rpc-url\":\"{{ .Data.ceramic_rpc }}\"},\"http-api\":{\"cors-allowed-origins\":[\".*\"],\"admin-dids\":[\"did:key:z6MktbKJrMnhVJ37QFTo12911ycm2juKDUzWHDVETu9s5a9T\"]},\"ipfs\":{\"mode\":\"remote\",\"host\":\"http://public-ceramic-ipfs-dev-service-internal.default.svc.cluster.local:5001\"},\"logger\":{\"log-level\":0},\"metrics\":{\"prometheus-exporter-enabled\":true,\"prometheus-exporter-port\":9464},\"network\":{\"name\":\"testnet-clay\"},\"node\":{},\"state-store\":{\"mode\":\"s3\",\"s3-bucket\":\"ceramic-node-dev-prime2\"},\"indexing\":{\"db\":\"{{ .Data.ceramic_url }}\",\"allow-queries-before-historical-sync\":true}}" > daemon.config.json
          export NODE_ENV=production
          export CERAMIC_PUBSUB_QPS_LIMIT=500
          echo "envset"; 
          {{- end -}}
      labels:
        App: JsCeramicDev
    spec:
      containers:
        - image: ceramicnetwork/js-ceramic:6.5.0
          name: js-ceramic-dev
          command: ["/bin/bash", "-c"]
          args:
            - echo "SOURCING ENV"; source /vault/secrets/config; ./packages/cli/bin/ceramic.js daemon --config daemon.config.json;
          ports:
            - containerPort: 7007
              name: http-api
          resources:
            limits:
              cpu: 2
              memory: 4Gi
            requests:
              cpu: 1
              memory: 4Gi
          # # restart pod after failureThreshold*periodSeconds total seconds
          livenessProbe:
            httpGet:
              path: /api/v0/node/healthcheck
              port: http-api
            failureThreshold: 10
            periodSeconds: 5
          # # wait for pod to start for failureThreshold*periodSeconds total seconds
          startupProbe:
            httpGet:
              path: /api/v0/node/healthcheck
              port: http-api
            failureThreshold: 60
            periodSeconds: 1

      serviceAccountName: "vault-auth"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ceramic-dev-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
    - host: ceramic-dev.desci.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: public-js-ceramic-dev-service
                port:
                  number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: public-js-ceramic-dev-service
  labels:
    App: JsCeramicDev
spec:
  type: LoadBalancer
  selector:
    App: JsCeramicDev
  ports:
    - protocol: TCP
      name: http
      port: 80
      targetPort: 7007
