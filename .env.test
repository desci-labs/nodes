NODE_ENV=test

PORT=5421

IPFS_NODE_URL=http://host.docker.internal:5002
PUBLIC_IPFS_RESOLVER=https://ipfs.io

### Database - Postgres
PG_HOST=host.docker.internal
PG_PORT=5434
POSTGRES_USER=walter
POSTGRES_PASSWORD=white
POSTGRES_DB=boilerplate
DATABASE_URL=postgresql://walter:white@host.docker.internal:5434/boilerplate

### JWT
JWT_SECRET=secretshhh
JWT_EXPIRATION=

SESSION_KEY=

### Redis Cache
REDIS_HOST=host.docker.internal
REDIS_PORT=6379
REDIS_URL=redis://host.docker.internal:6379

# log4j Levels: trace, debug, info, warn, error, fatal
PINO_LOG_LEVEL=error

# LOCAL DEV
# http://localhost:1984 
#
# LIVE:
# host: 'arweave.net',
# port: 443,
# protocol: 'https'
#
ARWEAVE_ENABLED=0
ARWEAVE_HOST=
ARWEAVE_PORT=
ARWEAVE_PROTOCOL=

## generate here: npx ts-node desci-server/src/utils/generateArweaveKeys.ts
ARWEAVE_PUBKEY=
# base64-encoded private key JSON stringified object (https://docs.arweave.org/developers/server/http-api#key-format)
ARWAVE_SECRET_PRIVATE_KEY_SECRET=

ESTUARY_API_KEY=
ESTUARY_API_URL=https://api.estuary.tech

SERVER_URL=http://localhost:5421
DAPP_URL=http://localhost:3000
THEGRAPH_API_URL=http://host.docker.internal:8000/subgraphs/name/nodes

# set to true if need to send email
SHOULD_SEND_EMAIL=
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=

# for faucet
HOT_WALLET_KEY=
# https://cso-classifier.internal
CSO_CLASSIFIER_API=
# vscode runnable
VSCODE_ACCESS_TOKEN=

# nodes media server (DOI resolution, video transcoding, LaTeX -> PDF Conversion)
NODES_MEDIA_SERVER_URL=http://host.docker.internal:5454