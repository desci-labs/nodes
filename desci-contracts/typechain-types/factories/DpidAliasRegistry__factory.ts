/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DpidAliasRegistry,
  DpidAliasRegistryInterface,
} from "../DpidAliasRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "dpid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "streamID",
        type: "string",
      },
    ],
    name: "DpidMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "dpid",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "cid",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "time",
                type: "uint256",
              },
            ],
            internalType: "struct DpidAliasRegistry.LegacyVersion[]",
            name: "versions",
            type: "tuple[]",
          },
        ],
        indexed: false,
        internalType: "struct DpidAliasRegistry.LegacyDpidEntry",
        name: "entry",
        type: "tuple",
      },
    ],
    name: "ImportedDpid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "dpid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "streamId",
        type: "string",
      },
    ],
    name: "UpgradedDpid",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_firstDpid",
        type: "uint256",
      },
    ],
    name: "__DpidAliasRegistry_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "firstDpid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dpid",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "cid",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "time",
                type: "uint256",
              },
            ],
            internalType: "struct DpidAliasRegistry.LegacyVersion[]",
            name: "versions",
            type: "tuple[]",
          },
        ],
        internalType: "struct DpidAliasRegistry.LegacyDpidEntry",
        name: "entry",
        type: "tuple",
      },
    ],
    name: "importLegacyDpid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "legacy",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dpid",
        type: "uint256",
      },
    ],
    name: "legacyLookup",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            components: [
              {
                internalType: "string",
                name: "cid",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "time",
                type: "uint256",
              },
            ],
            internalType: "struct DpidAliasRegistry.LegacyVersion[]",
            name: "versions",
            type: "tuple[]",
          },
        ],
        internalType: "struct DpidAliasRegistry.LegacyDpidEntry",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dpid",
        type: "uint256",
      },
    ],
    name: "lookup",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "streamId",
        type: "string",
      },
    ],
    name: "mintDpid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nextDpid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "registry",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "dpid",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "streamId",
        type: "string",
      },
    ],
    name: "upgradeDpid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50620000226200002860201b60201c565b620001d3565b600060019054906101000a900460ff16156200007b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000729062000127565b60405180910390fd5b60ff801660008054906101000a900460ff1660ff161015620000ed5760ff6000806101000a81548160ff021916908360ff1602179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860ff604051620000e4919062000149565b60405180910390a15b565b6000620000fe60278362000166565b91506200010b8262000184565b604082019050919050565b620001218162000177565b82525050565b600060208201905081810360008301526200014281620000ef565b9050919050565b600060208201905062000160600083018462000116565b92915050565b600082825260208201905092915050565b600060ff82169050919050565b7f496e697469616c697a61626c653a20636f6e747261637420697320696e69746960008201527f616c697a696e6700000000000000000000000000000000000000000000000000602082015250565b6122d280620001e36000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063810a9afa1161008c578063b724de3a11610066578063b724de3a14610212578063cfb452b514610242578063ded8896b14610260578063f2fde38b1461027c576100cf565b8063810a9afa146101a65780638da5cb5b146101d6578063afc26911146101f4576100cf565b80630a874df6146100d4578063144ae85514610104578063362b3e63146101205780635893253c1461013c578063715018a61461016c578063788243d514610176575b600080fd5b6100ee60048036038101906100e99190610e06565b610298565b6040516100fb9190611323565b60405180910390f35b61011e60048036038101906101199190610e87565b61033d565b005b61013a60048036038101906101359190610e06565b6103a5565b005b61015660048036038101906101519190610e06565b6104f2565b6040516101639190611323565b60405180910390f35b610174610592565b005b610190600480360381019061018b9190610e06565b6105a6565b60405161019d91906112ed565b60405180910390f35b6101c060048036038101906101bb9190610e06565b6105e4565b6040516101cd9190611405565b60405180910390f35b6101de610762565b6040516101eb91906112ed565b60405180910390f35b6101fc61078c565b6040516102099190611427565b60405180910390f35b61022c60048036038101906102279190610dc1565b610792565b6040516102399190611427565b60405180910390f35b61024a61081a565b6040516102579190611427565b60405180910390f35b61027a60048036038101906102759190610e2f565b610820565b005b61029660048036038101906102919190610d98565b610989565b005b60606067600083815260200190815260200160002080546102b890611c2e565b80601f01602080910402602001604051908101604052809291908181526020018280546102e490611c2e565b80156103315780601f1061030657610100808354040283529160200191610331565b820191906000526020600020905b81548152906001019060200180831161031457829003601f168201915b50505050509050919050565b610345610a0d565b8060686000848152602001908152602001600020818161036591906121f5565b9050507fa9c55ebaa1fada408bd72c2f0ea7c27f5444b105bcff12c5381baac912156ada8282604051610399929190611474565b60405180910390a15050565b60008060019054906101000a900460ff161590508080156103d65750600160008054906101000a900460ff1660ff16105b8061040357506103e530610a8b565b1580156104025750600160008054906101000a900460ff1660ff16145b5b610442576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043990611385565b60405180910390fd5b60016000806101000a81548160ff021916908360ff160217905550801561047f576001600060016101000a81548160ff0219169083151502179055505b610487610aae565b816065819055508160668190555080156104ee5760008060016101000a81548160ff0219169083151502179055507f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb384740249860016040516104e59190611308565b60405180910390a15b5050565b6067602052806000526040600020600091509050805461051190611c2e565b80601f016020809104026020016040519081016040528092919081815260200182805461053d90611c2e565b801561058a5780601f1061055f5761010080835404028352916020019161058a565b820191906000526020600020905b81548152906001019060200180831161056d57829003601f168201915b505050505081565b61059a610a0d565b6105a46000610b07565b565b60686020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081565b6105ec610c36565b606860008381526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805480602002602001604051908101604052809291908181526020016000905b8282101561075357838290600052602060002090600202016040518060400160405290816000820180546106b890611c2e565b80601f01602080910402602001604051908101604052809291908181526020018280546106e490611c2e565b80156107315780601f1061070657610100808354040283529160200191610731565b820191906000526020600020905b81548152906001019060200180831161071457829003601f168201915b5050505050815260200160018201548152505081526020019060010190610685565b50505050815250509050919050565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60665481565b600080606654905083836067600084815260200190815260200160002091906107bc929190610c66565b507f96a65efbb6991f67fc8a4c7550fcfd08f1968737d2f5adcded5cd937b3cc0f3d8185856040516107f093929190611442565b60405180910390a16066600081548092919061080b90611c7c565b91905055508091505092915050565b60655481565b600060676000858152602001908152602001600020805461084090611c2e565b905014610882576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087990611345565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166068600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610926576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091d906113e5565b60405180910390fd5b8181606760008681526020019081526020016000209190610948929190610c66565b507f442b41840a10393534508176faee6f70b1870707dc24573b67d49f28cbac7f1c83838360405161097c93929190611442565b60405180910390a1505050565b610991610a0d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f890611365565b60405180910390fd5b610a0a81610b07565b50565b610a15610bcd565b73ffffffffffffffffffffffffffffffffffffffff16610a33610762565b73ffffffffffffffffffffffffffffffffffffffff1614610a89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a80906113a5565b60405180910390fd5b565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600060019054906101000a900460ff16610afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af4906113c5565b60405180910390fd5b610b05610bd5565b565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600060019054906101000a900460ff16610c24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1b906113c5565b60405180910390fd5b610c34610c2f610bcd565b610b07565b565b6040518060400160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001606081525090565b828054610c7290611c2e565b90600052602060002090601f016020900481019282610c945760008555610cdb565b82601f10610cad57803560ff1916838001178555610cdb565b82800160010185558215610cdb579182015b82811115610cda578235825591602001919060010190610cbf565b5b509050610ce89190610cec565b5090565b5b80821115610d05576000816000905550600101610ced565b5090565b600081359050610d1881612269565b92915050565b60008083601f840112610d3057600080fd5b8235905067ffffffffffffffff811115610d4957600080fd5b602083019150836001820283011115610d6157600080fd5b9250929050565b600060408284031215610d7a57600080fd5b81905092915050565b600081359050610d9281612280565b92915050565b600060208284031215610daa57600080fd5b6000610db884828501610d09565b91505092915050565b60008060208385031215610dd457600080fd5b600083013567ffffffffffffffff811115610dee57600080fd5b610dfa85828601610d1e565b92509250509250929050565b600060208284031215610e1857600080fd5b6000610e2684828501610d83565b91505092915050565b600080600060408486031215610e4457600080fd5b6000610e5286828701610d83565b935050602084013567ffffffffffffffff811115610e6f57600080fd5b610e7b86828701610d1e565b92509250509250925092565b60008060408385031215610e9a57600080fd5b6000610ea885828601610d83565b925050602083013567ffffffffffffffff811115610ec557600080fd5b610ed185828601610d68565b9150509250929050565b6000610ee78383611243565b905092915050565b6000610efb8383611292565b905092915050565b610f0c816118b4565b82525050565b610f1b816118b4565b82525050565b6000610f2d8385611622565b935083602084028501610f3f8461158d565b8060005b87811015610f83578484038952610f5a828461181f565b610f648582610edb565b9450610f6f83611608565b925060208a01995050600181019050610f43565b50829750879450505050509392505050565b6000610fa0826115dc565b610faa8185611622565b935083602082028501610fbc85611597565b8060005b85811015610ff85784840389528151610fd98582610eef565b9450610fe483611615565b925060208a01995050600181019050610fc0565b50829750879550505050505092915050565b611013816119a3565b82525050565b60006110258385611633565b9350611032838584611b60565b61103b83611ed3565b840190509392505050565b60006110528385611644565b935061105f838584611b60565b61106883611ed3565b840190509392505050565b600061107e826115fd565b6110888185611633565b9350611098818560208601611b6f565b6110a181611ed3565b840191505092915050565b60006110b7826115fd565b6110c18185611644565b93506110d1818560208601611b6f565b6110da81611ed3565b840191505092915050565b60006110f2601583611644565b91506110fd82611f5f565b602082019050919050565b6000611115602683611644565b915061112082611f88565b604082019050919050565b6000611138602e83611644565b915061114382611fd7565b604082019050919050565b600061115b602083611644565b915061116682612026565b602082019050919050565b600061117e602b83611644565b91506111898261204f565b604082019050919050565b60006111a1601983611644565b91506111ac8261209e565b602082019050919050565b6000604083016111ca600084018461175a565b6111d76000860182610f03565b506111e56020840184611771565b85830360208701526111f8838284610f21565b925050508091505092915050565b600060408301600083015161121e6000860182610f03565b50602083015184820360208601526112368282610f95565b9150508091505092915050565b60006040830161125660008401846117c8565b8583036000870152611269838284611019565b9250505061127a6020840184611843565b61128760208601826112cf565b508091505092915050565b600060408301600083015184820360008601526112af8282611073565b91505060208301516112c460208601826112cf565b508091505092915050565b6112d8816118e6565b82525050565b6112e7816118e6565b82525050565b60006020820190506113026000830184610f12565b92915050565b600060208201905061131d600083018461100a565b92915050565b6000602082019050818103600083015261133d81846110ac565b905092915050565b6000602082019050818103600083015261135e816110e5565b9050919050565b6000602082019050818103600083015261137e81611108565b9050919050565b6000602082019050818103600083015261139e8161112b565b9050919050565b600060208201905081810360008301526113be8161114e565b9050919050565b600060208201905081810360008301526113de81611171565b9050919050565b600060208201905081810360008301526113fe81611194565b9050919050565b6000602082019050818103600083015261141f8184611206565b905092915050565b600060208201905061143c60008301846112de565b92915050565b600060408201905061145760008301866112de565b818103602083015261146a818486611046565b9050949350505050565b600060408201905061148960008301856112de565b818103602083015261149b81846111b7565b90509392505050565b600080833560016020038436030381126114bd57600080fd5b80840192508235915067ffffffffffffffff8211156114db57600080fd5b6020830192506020820236038313156114f357600080fd5b509250929050565b6000808335600160200384360303811261151457600080fd5b80840192508235915067ffffffffffffffff82111561153257600080fd5b60208301925060018202360383131561154a57600080fd5b509250929050565b60008235600160400383360303811261156a57600080fd5b80830191505092915050565b600081905061158682600261185a565b9050919050565b6000819050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b60008190508160005260206000209050919050565b600082905092915050565b600081519050919050565b600081549050919050565b600082905092915050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b60208410600081146116ae57601f84116001811461167e576116778685611c60565b83556116a8565b611687836115bc565b61169c6020601f88010482016001830161190b565b6116a687856120c7565b505b506116f7565b6116b7826115bc565b6020601f8701048101601f871680156116d8576116d78160018403611d9f565b5b6116ea6020601f89010484018361190b565b6001886002021785555050505b5050505050565b6020831060008114611749576020851060008114611727576117208685611c60565b8355611743565b8360ff1916935083611738846115bc565b556001866002020183555b50611753565b6001856002020182555b5050505050565b60006117696020840184610d09565b905092915050565b6000808335600160200384360303811261178a57600080fd5b83810192508235915060208301925067ffffffffffffffff8211156117ae57600080fd5b6020820236038413156117c057600080fd5b509250929050565b600080833560016020038436030381126117e157600080fd5b83810192508235915060208301925067ffffffffffffffff82111561180557600080fd5b60018202360384131561181757600080fd5b509250929050565b60008235600160400383360303811261183757600080fd5b82810191505092915050565b60006118526020840184610d83565b905092915050565b6000611865826118e6565b9150611870836118e6565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156118a9576118a8611d12565b5b828202905092915050565b60006118bf826118c6565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b611908600082611e7e565b50565b5b8181101561192a5761191f600082611f47565b60018101905061190c565b5050565b5b8181101561194d57611942600082611f29565b60028101905061192f565b5050565b8181101561196f57611964600082611f47565b600181019050611951565b5050565b6119806000808301611f0b565b61198e600060018301611f47565b50565b600061199c826119b5565b9050919050565b60006119ae826118f0565b9050919050565b60006119c0826119c7565b9050919050565b60006119d2826118c6565b9050919050565b60006119e4826118e6565b9050919050565b6119f583836115d1565b6119ff8183611e1a565b611a088361158d565b611a11836115a7565b6000805b84811015611a4a57611a278488611552565b611a32818486612226565b60208501945060028401935050600181019050611a15565b5050505050505050565b611a5e83836115f2565b67ffffffffffffffff811115611a7757611a76611d70565b5b611a818254611c2e565b600080601f8411601f84111715611a9e57611a9b856115bc565b90505b601f831115611ad1576020601f85010481016020851015611abd578190505b611acf6020601f86010483018261190b565b505b601f841160018114611afe5760008515611aec578388013590505b611af68682611c60565b875550611b56565b601f1985168260005b82811015611b2c57858a01358255600182019150602086019550602081019050611b07565b87831015611b4957858a0135611b45601f8a1682611cc5565b8355505b6001600289020189555050505b5050505050505050565b82818337600083830152505050565b60005b83811015611b8d578082015181840152602081019050611b72565b83811115611b9c576000848401525b50505050565b600081016000830180611bb481611dee565b9050611bc081846121b2565b5050506001810160208301611bd581856114a4565b611be08183866121d5565b505050505050565b6000810160008301611bfa81856114fb565b611c058183866121e5565b50505050600181016020830180611c1b81611e04565b9050611c278184612203565b5050505050565b60006002820490506001821680611c4657607f821691505b60208210811415611c5a57611c59611d41565b5b50919050565b6000611c6c8383611cc5565b9150826002028217905092915050565b6000611c87826118e6565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611cba57611cb9611d12565b5b600182019050919050565b6000611cd660001984600802611efe565b1980831691505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611dcf7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83602003600802611efe565b815481168255505050565b6000819050919050565b6000819050919050565b60008135611dfb81612269565b80915050919050565b60008135611e1181612280565b80915050919050565b68010000000000000000821115611e3457611e33611d70565b5b611e3d816115e7565b82825580831015611e7957611e5181611576565b611e5a84611576565b611e63846115a7565b818101838201611e73818361192e565b50505050505b505050565b68010000000000000000821115611e9857611e97611d70565b5b8054611ea381611c2e565b80841115611eb857611eb7848284866116fe565b5b80841015611ecd57611ecc84828486611655565b5b50505050565b6000601f19601f8301169050919050565b60008160001b9050919050565b600082821b905092915050565b600082821c905092915050565b60008214611f1c57611f1b611ce3565b5b611f25816118fd565b5050565b60008214611f3a57611f39611ce3565b5b611f4381611973565b5050565b611f4f612297565b611f5a818484612244565b505050565b7f6470696420616c72656164792075706772616465640000000000000000000000600082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960008201527f6e697469616c697a696e67000000000000000000000000000000000000000000602082015250565b7f756e617574686f72697a65642064706964207570677261646500000000000000600082015250565b6120d0816115bc565b6120db838254611c60565b8083556000825550505050565b600073ffffffffffffffffffffffffffffffffffffffff61210884611ee4565b9350801983169250808416831791505092915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61214a84611ee4565b9350801983169250808416831791505092915050565b6000600883026121907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611ef1565b61219a8683611ef1565b95508019841693508086168417925050509392505050565b6121bb82611991565b6121ce6121c782611dda565b83546120e8565b8255505050565b6121e08383836119eb565b505050565b6121f0838383611a54565b505050565b6121ff8282611ba2565b5050565b61220c826119d9565b61221f61221882611de4565b835461211e565b8255505050565b811561223557612234611ce3565b5b61223f8382611be8565b505050565b61224d836119d9565b61226161225982611de4565b848454612160565b825550505050565b612272816118b4565b811461227d57600080fd5b50565b612289816118e6565b811461229457600080fd5b50565b60009056fea264697066735822122084f5f1681ed8582b0b01a3c050af63e3bc886fc8eb1d7bfbad5710635ba9f00f64736f6c63430008040033";

type DpidAliasRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DpidAliasRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DpidAliasRegistry__factory extends ContractFactory {
  constructor(...args: DpidAliasRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "DpidAliasRegistry";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DpidAliasRegistry> {
    return super.deploy(overrides || {}) as Promise<DpidAliasRegistry>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DpidAliasRegistry {
    return super.attach(address) as DpidAliasRegistry;
  }
  connect(signer: Signer): DpidAliasRegistry__factory {
    return super.connect(signer) as DpidAliasRegistry__factory;
  }
  static readonly contractName: "DpidAliasRegistry";
  public readonly contractName: "DpidAliasRegistry";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DpidAliasRegistryInterface {
    return new utils.Interface(_abi) as DpidAliasRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DpidAliasRegistry {
    return new Contract(address, _abi, signerOrProvider) as DpidAliasRegistry;
  }
}
