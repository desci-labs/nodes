/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AcceptEverythingPaymaster,
  AcceptEverythingPaymasterInterface,
} from "../AcceptEverythingPaymaster";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "CALLDATA_SIZE_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FORWARDER_HUB_OVERHEAD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAYMASTER_ACCEPTANCE_BUDGET",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "POST_RELAYED_CALL_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRE_RELAYED_CALL_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGasAndDataLimits",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "acceptanceBudget",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preRelayedCallGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "postRelayedCallGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "calldataSizeLimit",
            type: "uint256",
          },
        ],
        internalType: "struct IPaymaster.GasAndDataLimits",
        name: "limits",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRelayHub",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTrustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "gasUseWithoutPost",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "transactionCalldataGasUsed",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "relayWorker",
            type: "address",
          },
          {
            internalType: "address",
            name: "paymaster",
            type: "address",
          },
          {
            internalType: "address",
            name: "forwarder",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "paymasterData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "clientId",
            type: "uint256",
          },
        ],
        internalType: "struct GsnTypes.RelayData",
        name: "relayData",
        type: "tuple",
      },
    ],
    name: "postRelayedCall",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "from",
                type: "address",
              },
              {
                internalType: "address",
                name: "to",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "value",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "gas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
              },
              {
                internalType: "bytes",
                name: "data",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "validUntilTime",
                type: "uint256",
              },
            ],
            internalType: "struct IForwarder.ForwardRequest",
            name: "request",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "maxFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "maxPriorityFeePerGas",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "transactionCalldataGasUsed",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "relayWorker",
                type: "address",
              },
              {
                internalType: "address",
                name: "paymaster",
                type: "address",
              },
              {
                internalType: "address",
                name: "forwarder",
                type: "address",
              },
              {
                internalType: "bytes",
                name: "paymasterData",
                type: "bytes",
              },
              {
                internalType: "uint256",
                name: "clientId",
                type: "uint256",
              },
            ],
            internalType: "struct GsnTypes.RelayData",
            name: "relayData",
            type: "tuple",
          },
        ],
        internalType: "struct GsnTypes.RelayRequest",
        name: "relayRequest",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "approvalData",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "maxPossibleGas",
        type: "uint256",
      },
    ],
    name: "preRelayedCall",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRelayHub",
        name: "hub",
        type: "address",
      },
    ],
    name: "setRelayHub",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "setTrustedForwarder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "versionPaymaster",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "target",
        type: "address",
      },
    ],
    name: "withdrawRelayHubDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6120ab806200010e6000396000f3fe60806040526004361061010c5760003560e01c8063921276ea11610095578063ce1b815f11610064578063ce1b815f1461046c578063da74222814610497578063df463a66146104c0578063f2fde38b146104eb578063f9c002f7146105145761022d565b8063921276ea146103c0578063b039a88f146103eb578063b90b41cf14610416578063bbdaa3c9146104415761022d565b8063715018a6116100dc578063715018a61461030157806376fa01c3146103185780637bb05264146103415780637bdf2ec71461036a5780638da5cb5b146103955761022d565b8062be5dd41461023257806301ffc9a7146102705780632d14c4b7146102ad5780635c5e3db1146102d65761022d565b3661022d57600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036101a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101999061122e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663aa67c91934306040518363ffffffff1660e01b81526004016101fe919061128f565b6000604051808303818588803b15801561021757600080fd5b505af115801561022b573d6000803e3d6000fd5b005b600080fd5b34801561023e57600080fd5b5061025960048036038101906102549190611373565b61053f565b6040516102679291906114e1565b60405180910390f35b34801561027c57600080fd5b5061029760048036038101906102929190611569565b61058d565b6040516102a49190611596565b60405180910390f35b3480156102b957600080fd5b506102d460048036038101906102cf91906115ef565b61066f565b005b3480156102e257600080fd5b506102eb61070a565b6040516102f8919061163e565b60405180910390f35b34801561030d57600080fd5b50610316610710565b005b34801561032457600080fd5b5061033f600480360381019061033a91906116a5565b610724565b005b34801561034d57600080fd5b5061036860048036038101906103639190611787565b610740565b005b34801561037657600080fd5b5061037f610814565b60405161038c919061128f565b60405180910390f35b3480156103a157600080fd5b506103aa61083e565b6040516103b7919061128f565b60405180910390f35b3480156103cc57600080fd5b506103d5610867565b6040516103e291906117f8565b60405180910390f35b3480156103f757600080fd5b50610400610887565b60405161040d919061187e565b60405180910390f35b34801561042257600080fd5b5061042b6108cd565b604051610438919061163e565b60405180910390f35b34801561044d57600080fd5b506104566108d3565b604051610463919061163e565b60405180910390f35b34801561047857600080fd5b506104816108da565b60405161048e919061128f565b60405180910390f35b3480156104a357600080fd5b506104be60048036038101906104b991906118c5565b610904565b005b3480156104cc57600080fd5b506104d56109d8565b6040516104e2919061163e565b60405180910390f35b3480156104f757600080fd5b50610512600480360381019061050d91906118c5565b6109ec565b005b34801561052057600080fd5b50610529610a6f565b604051610536919061163e565b60405180910390f35b6060600061054b610a76565b61055488610aed565b61055d88610b8f565b61056688610be8565b6105708585610c4e565b61057e888888888888610c98565b91509150965096945050505050565b60007fe1ab2dea000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061065857507f0e083076000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610668575061066782610cbd565b5b9050919050565b610677610d27565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3fef3a382846040518363ffffffff1660e01b81526004016106d4929190611901565b600060405180830381600087803b1580156106ee57600080fd5b505af1158015610702573d6000803e3d6000fd5b505050505050565b61290481565b610718610d27565b6107226000610da5565b565b61072c610a76565b6107398585858585610e69565b5050505050565b610748610d27565b6107917fe9fb30f7000000000000000000000000000000000000000000000000000000008273ffffffffffffffffffffffffffffffffffffffff16610e7090919063ffffffff16565b6107d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c790611976565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060405180606001604052806030815260200161204660309139905090565b61088f6111a9565b604051806080016040528061c350620186a06108ab91906119c5565b8152602001620186a081526020016201adb08152602001612904815250905090565b61c35081565b6201adb081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61090c610d27565b6109557f25e23e64000000000000000000000000000000000000000000000000000000008273ffffffffffffffffffffffffffffffffffffffff16610e7090919063ffffffff16565b610994576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098b90611a45565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b61c350620186a06109e991906119c5565b81565b6109f4610d27565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a63576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5a90611ad7565b60405180910390fd5b610a6c81610da5565b50565b620186a081565b610a7e610814565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae290611b43565b60405180910390fd5b565b808060200190610afd9190611b72565b60a0016020810190610b0f91906118c5565b73ffffffffffffffffffffffffffffffffffffffff16610b2d6108da565b73ffffffffffffffffffffffffffffffffffffffff1614610b83576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7a90611be7565b60405180910390fd5b610b8c81610e95565b50565b6000818060000190610ba19190611c07565b6040013514610be5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bdc90611c7b565b60405180910390fd5b50565b6000818060200190610bfa9190611b72565b8060c00190610c099190611c9b565b905014610c4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4290611d4a565b60405180910390fd5b50565b60008282905014610c94576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8b90611db6565b60405180910390fd5b5050565b6060600080604051806020016040528060008152509091509150965096945050505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610d2f611095565b73ffffffffffffffffffffffffffffffffffffffff16610d4d61083e565b73ffffffffffffffffffffffffffffffffffffffff1614610da3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d9a90611e22565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5050505050565b6000610e7b8361109d565b8015610e8d5750610e8c83836110ea565b5b905092915050565b600080828060000190610ea89190611c07565b6020016020810190610eba91906118c5565b73ffffffffffffffffffffffffffffffffffffffff1663572b6c0560e01b848060200190610ee89190611b72565b60a0016020810190610efa91906118c5565b604051602401610f0a919061128f565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610f749190611e7e565b600060405180830381855afa9150503d8060008114610faf576040519150601f19603f3d011682016040523d82523d6000602084013e610fb4565b606091505b509150915081610ff9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff090611ee1565b60405180910390fd5b602081511461103d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103490611f4d565b60405180910390fd5b808060200190518101906110519190611f82565b611090576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161108790611ffb565b60405180910390fd5b505050565b600033905090565b60006110c9827f01ffc9a7000000000000000000000000000000000000000000000000000000006110ea565b80156110e357506110e18263ffffffff60e01b6110ea565b155b9050919050565b6000806301ffc9a760e01b83604051602401611106919061202a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505090506000806000602060008551602087018a617530fa92503d91506000519050828015611191575060208210155b801561119d5750600081115b94505050505092915050565b6040518060800160405280600081526020016000815260200160008152602001600081525090565b600082825260208201905092915050565b7f72656c6179206875622061646472657373206e6f742073657400000000000000600082015250565b60006112186019836111d1565b9150611223826111e2565b602082019050919050565b600060208201905081810360008301526112478161120b565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112798261124e565b9050919050565b6112898161126e565b82525050565b60006020820190506112a46000830184611280565b92915050565b600080fd5b600080fd5b600080fd5b6000604082840312156112cf576112ce6112b4565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126112fd576112fc6112d8565b5b8235905067ffffffffffffffff81111561131a576113196112dd565b5b602083019150836001820283011115611336576113356112e2565b5b9250929050565b6000819050919050565b6113508161133d565b811461135b57600080fd5b50565b60008135905061136d81611347565b92915050565b600080600080600080608087890312156113905761138f6112aa565b5b600087013567ffffffffffffffff8111156113ae576113ad6112af565b5b6113ba89828a016112b9565b965050602087013567ffffffffffffffff8111156113db576113da6112af565b5b6113e789828a016112e7565b9550955050604087013567ffffffffffffffff81111561140a576114096112af565b5b61141689828a016112e7565b9350935050606061142989828a0161135e565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b60005b83811015611470578082015181840152602081019050611455565b60008484015250505050565b6000601f19601f8301169050919050565b600061149882611436565b6114a28185611441565b93506114b2818560208601611452565b6114bb8161147c565b840191505092915050565b60008115159050919050565b6114db816114c6565b82525050565b600060408201905081810360008301526114fb818561148d565b905061150a60208301846114d2565b9392505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61154681611511565b811461155157600080fd5b50565b6000813590506115638161153d565b92915050565b60006020828403121561157f5761157e6112aa565b5b600061158d84828501611554565b91505092915050565b60006020820190506115ab60008301846114d2565b92915050565b60006115bc8261124e565b9050919050565b6115cc816115b1565b81146115d757600080fd5b50565b6000813590506115e9816115c3565b92915050565b60008060408385031215611606576116056112aa565b5b60006116148582860161135e565b9250506020611625858286016115da565b9150509250929050565b6116388161133d565b82525050565b6000602082019050611653600083018461162f565b92915050565b611662816114c6565b811461166d57600080fd5b50565b60008135905061167f81611659565b92915050565b6000610100828403121561169c5761169b6112b4565b5b81905092915050565b6000806000806000608086880312156116c1576116c06112aa565b5b600086013567ffffffffffffffff8111156116df576116de6112af565b5b6116eb888289016112e7565b955095505060206116fe88828901611670565b935050604061170f8882890161135e565b925050606086013567ffffffffffffffff8111156117305761172f6112af565b5b61173c88828901611685565b9150509295509295909350565b60006117548261126e565b9050919050565b61176481611749565b811461176f57600080fd5b50565b6000813590506117818161175b565b92915050565b60006020828403121561179d5761179c6112aa565b5b60006117ab84828501611772565b91505092915050565b600081519050919050565b60006117ca826117b4565b6117d481856111d1565b93506117e4818560208601611452565b6117ed8161147c565b840191505092915050565b6000602082019050818103600083015261181281846117bf565b905092915050565b6118238161133d565b82525050565b60808201600082015161183f600085018261181a565b506020820151611852602085018261181a565b506040820151611865604085018261181a565b506060820151611878606085018261181a565b50505050565b60006080820190506118936000830184611829565b92915050565b6118a28161126e565b81146118ad57600080fd5b50565b6000813590506118bf81611899565b92915050565b6000602082840312156118db576118da6112aa565b5b60006118e9848285016118b0565b91505092915050565b6118fb816115b1565b82525050565b600060408201905061191660008301856118f2565b611923602083018461162f565b9392505050565b7f746172676574206973206e6f7420612076616c6964204952656c617948756200600082015250565b6000611960601f836111d1565b915061196b8261192a565b602082019050919050565b6000602082019050818103600083015261198f81611953565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006119d08261133d565b91506119db8361133d565b92508282019050808211156119f3576119f2611996565b5b92915050565b7f746172676574206973206e6f7420612076616c69642049466f72776172646572600082015250565b6000611a2f6020836111d1565b9150611a3a826119f9565b602082019050919050565b60006020820190508181036000830152611a5e81611a22565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611ac16026836111d1565b9150611acc82611a65565b604082019050919050565b60006020820190508181036000830152611af081611ab4565b9050919050565b7f63616e206f6e6c792062652063616c6c65642062792052656c61794875620000600082015250565b6000611b2d601e836111d1565b9150611b3882611af7565b602082019050919050565b60006020820190508181036000830152611b5c81611b20565b9050919050565b600080fd5b600080fd5b600080fd5b60008235600161010003833603038112611b8f57611b8e611b63565b5b80830191505092915050565b7f466f72776172646572206973206e6f7420747275737465640000000000000000600082015250565b6000611bd16018836111d1565b9150611bdc82611b9b565b602082019050919050565b60006020820190508181036000830152611c0081611bc4565b9050919050565b60008235600160e003833603038112611c2357611c22611b63565b5b80830191505092915050565b7f76616c7565207472616e73666572206e6f7420737570706f7274656400000000600082015250565b6000611c65601c836111d1565b9150611c7082611c2f565b602082019050919050565b60006020820190508181036000830152611c9481611c58565b9050919050565b60008083356001602003843603038112611cb857611cb7611b63565b5b80840192508235915067ffffffffffffffff821115611cda57611cd9611b68565b5b602083019250600182023603831315611cf657611cf5611b6d565b5b509250929050565b7f73686f756c642068617665206e6f207061796d61737465724461746100000000600082015250565b6000611d34601c836111d1565b9150611d3f82611cfe565b602082019050919050565b60006020820190508181036000830152611d6381611d27565b9050919050565b7f73686f756c642068617665206e6f20617070726f76616c446174610000000000600082015250565b6000611da0601b836111d1565b9150611dab82611d6a565b602082019050919050565b60006020820190508181036000830152611dcf81611d93565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611e0c6020836111d1565b9150611e1782611dd6565b602082019050919050565b60006020820190508181036000830152611e3b81611dff565b9050919050565b600081905092915050565b6000611e5882611436565b611e628185611e42565b9350611e72818560208601611452565b80840191505092915050565b6000611e8a8284611e4d565b915081905092915050565b7f697354727573746564466f727761726465723a20726576657274656400000000600082015250565b6000611ecb601c836111d1565b9150611ed682611e95565b602082019050919050565b60006020820190508181036000830152611efa81611ebe565b9050919050565b7f697354727573746564466f727761726465723a2062616420726573706f6e7365600082015250565b6000611f376020836111d1565b9150611f4282611f01565b602082019050919050565b60006020820190508181036000830152611f6681611f2a565b9050919050565b600081519050611f7c81611659565b92915050565b600060208284031215611f9857611f976112aa565b5b6000611fa684828501611f6d565b91505092915050565b7f696e76616c696420666f7277617264657220666f7220726563697069656e7400600082015250565b6000611fe5601f836111d1565b9150611ff082611faf565b602082019050919050565b6000602082019050818103600083015261201481611fd8565b9050919050565b61202481611511565b82525050565b600060208201905061203f600083018461201b565b9291505056fe332e302e302d626574612e332b6f70656e67736e2e61636365707465766572797468696e672e697061796d6173746572a2646970667358221220d99120ab7f39bb0a99727b368f5ec40dc42004218479bde467d8e52e893e873664736f6c63430008110033";

type AcceptEverythingPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AcceptEverythingPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AcceptEverythingPaymaster__factory extends ContractFactory {
  constructor(...args: AcceptEverythingPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AcceptEverythingPaymaster";
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AcceptEverythingPaymaster> {
    return super.deploy(overrides || {}) as Promise<AcceptEverythingPaymaster>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AcceptEverythingPaymaster {
    return super.attach(address) as AcceptEverythingPaymaster;
  }
  connect(signer: Signer): AcceptEverythingPaymaster__factory {
    return super.connect(signer) as AcceptEverythingPaymaster__factory;
  }
  static readonly contractName: "AcceptEverythingPaymaster";
  public readonly contractName: "AcceptEverythingPaymaster";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AcceptEverythingPaymasterInterface {
    return new utils.Interface(_abi) as AcceptEverythingPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AcceptEverythingPaymaster {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AcceptEverythingPaymaster;
  }
}
